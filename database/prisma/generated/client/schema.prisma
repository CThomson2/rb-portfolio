generator client {
  provider        = "prisma-client-js"
  output          = "./generated/client"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["inventory", "production", "public"]
}

model bottle_sizes {
  id             Int              @id @default(autoincrement())
  volume         String           @db.VarChar(10)
  product_prices product_prices[]

  @@schema("public")
}

model chemical_groups {
  group_id Int    @id @default(autoincrement())
  name     String @db.VarChar(30)

  @@schema("public")
}

model product_prices {
  product_id     Int
  bottle_size_id Int
  price          Decimal      @db.Decimal(10, 2)
  bottle_sizes   bottle_sizes @relation(fields: [bottle_size_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_bottle_size")
  products       products     @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product")

  @@id([product_id, bottle_size_id])
  @@schema("public")
}

model products {
  product_id      Int              @id @default(autoincrement())
  name            String           @db.VarChar(50)
  sku             String           @unique(map: "product_sku_key") @db.VarChar(20)
  raw_material_id Int?
  grade           String           @db.VarChar(10)
  product_prices  product_prices[]
  raw_materials   raw_materials?   @relation(fields: [raw_material_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_raw_material")

  @@schema("public")
}

model raw_materials {
  id             Int        @id @default(autoincrement())
  name           String     @db.VarChar(100)
  cas_number     String     @db.VarChar(20)
  chemical_group String?    @default("Hydrocarbon") @db.VarChar(50)
  description    String?    @db.VarChar(150)
  un_code        String?    @db.Char(4)
  flash_point    Int?
  products       products[]

  @@schema("public")
}

model suppliers {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model batches {
  batch_id        Int            @id(map: "internal_batches_pkey") @default(autoincrement())
  distillation_id Int?
  creation_date   DateTime?      @default(dbgenerated("CURRENT_DATE")) @db.Date
  batch_code      String?        @unique(map: "internal_batches_batch_code_key") @db.VarChar(50)
  grade           String?        @db.VarChar(5)
  quantity        Decimal?       @db.Decimal
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?      @default(now()) @db.Timestamptz(6)
  distillations   distillations? @relation(fields: [distillation_id], references: [distillation_id], onDelete: NoAction, onUpdate: NoAction, map: "internal_batches_distillation_id_fkey")

  @@schema("inventory")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model deliveries {
  delivery_id       Int            @id(map: "drum_deliveries_pkey") @default(autoincrement())
  order_id          Int
  quantity_received Int?           @default(0)
  date_received     DateTime       @default(dbgenerated("CURRENT_DATE")) @db.Date
  batch_code        String?        @db.VarChar(50)
  location          String         @default("new-site") @db.VarChar(15)
  delivery_notes    String?
  created_at        DateTime       @default(now()) @db.Timestamptz(6)
  updated_at        DateTime       @default(now()) @db.Timestamptz(6)
  is_finalised      Boolean        @default(false)
  orders            orders         @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction)
  transactions      transactions[]

  @@unique([order_id, batch_code], map: "unique_order_batch")
  @@schema("inventory")
}

model distillations {
  distillation_id    Int                  @id @default(autoincrement())
  loading_date       DateTime?            @default(dbgenerated("CURRENT_DATE")) @db.Date
  start_date         DateTime?            @db.Date
  still_code         String?              @db.Char(1)
  volume_in          Decimal?             @default(200) @db.Decimal
  transporter        String?              @db.Char(2)
  loader             String?              @db.Char(2)
  operator           String?              @db.Char(2)
  completion_date    DateTime?            @db.Date
  volume_in_spec     Decimal?             @default(0) @db.Decimal
  volume_repro       Decimal?             @default(0) @db.Decimal
  created_at         DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?            @default(now()) @db.Timestamptz(6)
  batches            batches[]
  repro_additions    repro_additions[]
  drum_distillations drum_distillations[]

  @@schema("inventory")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model new_drums {
  drum_id            Int                  @id(map: "drums_pkey") @default(autoincrement())
  material           String               @db.VarChar(100)
  date_processed     DateTime?            @db.Date
  status             String               @default("pending") @db.VarChar(20)
  location           String?              @default("new-site") @db.VarChar(20)
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  updated_at         DateTime             @default(now()) @db.Timestamptz(6)
  order_id           Int?
  orders             orders?              @relation(fields: [order_id], references: [order_id], onDelete: Cascade, onUpdate: NoAction)
  transactions       transactions[]
  drum_distillations drum_distillations[]

  @@index([material], map: "idx_drums_material_type")
  @@index([status], map: "idx_drums_status")
  @@schema("inventory")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model orders {
  order_id          Int          @id @default(autoincrement())
  supplier          String       @db.VarChar(100)
  material          String       @db.VarChar(100)
  quantity          Int
  date_ordered      DateTime?    @default(dbgenerated("CURRENT_DATE")) @db.Date
  notes             String?
  created_at        DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?    @default(now()) @db.Timestamptz(6)
  quantity_received Int          @default(0)
  status            String       @default("pending") @db.VarChar(20)
  eta_start         DateTime?    @db.Date
  eta_end           DateTime?    @db.Date
  po_number         String?      @db.VarChar(10)
  deliveries        deliveries[]
  new_drums         new_drums[]

  @@schema("inventory")
}

model repro_additions {
  addition_id     Int            @id @default(autoincrement())
  repro_drum_id   Int?
  distillation_id Int?
  date_added      DateTime?      @default(dbgenerated("CURRENT_DATE")) @db.Date
  volume_added    Int
  volume_in_drum  Int
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?      @default(now()) @db.Timestamptz(6)
  distillations   distillations? @relation(fields: [distillation_id], references: [distillation_id], onDelete: NoAction, onUpdate: NoAction)
  repro_drums     repro_drums?   @relation(fields: [repro_drum_id], references: [repro_drum_id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("inventory")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model repro_drums {
  repro_drum_id   Int               @id @default(autoincrement())
  date_created    DateTime          @default(dbgenerated("CURRENT_DATE")) @db.Date
  material        String            @db.VarChar(100)
  capacity        Int               @default(200)
  current_volume  Int               @default(0)
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?         @default(now()) @db.Timestamptz(6)
  status          String            @default("available") @db.VarChar(20)
  volume_status   String            @default("partial") @db.VarChar(20)
  notes           String?           @db.VarChar(20)
  location        String?           @default("TBD") @db.VarChar(20)
  repro_additions repro_additions[]
  transactions    transactions[]

  @@index([material], map: "idx_repro_drums_material_type")
  @@index([status], map: "idx_repro_drums_status")
  @@index([volume_status], map: "idx_repro_drums_volume_status")
  @@schema("inventory")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model transactions {
  tx_id       Int          @id @default(autoincrement())
  tx_type     String       @default("import") @db.VarChar(20)
  tx_date     DateTime     @default(dbgenerated("CURRENT_DATE")) @db.Date
  material    String       @db.VarChar(100)
  drum_id     Int?
  repro_id    Int?
  tx_notes    String?
  created_at  DateTime     @default(now()) @db.Timestamptz(6)
  updated_at  DateTime     @default(now()) @db.Timestamptz(6)
  process_id  Int?
  delivery_id Int?
  order_id    Int?
  direction   String?      @default(dbgenerated("\nCASE tx_type\n    WHEN 'intake'::text THEN 'IN'::text\n    WHEN 'scheduled'::text THEN NULL::text\n    WHEN 'loaded'::text THEN 'OUT'::text\n    WHEN 'processed'::text THEN NULL::text\n    WHEN 'failed'::text THEN 'IN'::text\n    WHEN 'requeued'::text THEN 'IN'::text\n    WHEN 'disposed'::text THEN 'OUT'::text\n    WHEN 'lost'::text THEN 'OUT'::text\n    WHEN 'cancelled'::text THEN NULL::text\n    ELSE NULL::text\nEND"))
  deliveries  deliveries?  @relation(fields: [delivery_id], references: [delivery_id], onDelete: Cascade, onUpdate: NoAction)
  new_drums   new_drums?   @relation(fields: [drum_id], references: [drum_id], onDelete: NoAction, onUpdate: NoAction)
  repro_drums repro_drums? @relation(fields: [repro_id], references: [repro_drum_id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("inventory")
}

model cleaning_records {
  cleaning_id Int     @id @default(autoincrement())
  still_code  String? @db.Char
  operator    String? @db.VarChar(10)
  checker     String? @db.VarChar(10)

  @@index([still_code], map: "fki_cleaning_still_code_fkey")
  @@schema("production")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model drum_distillations {
  drum_id         Int
  distillation_id Int
  fraction_used   Decimal       @default(1) @db.Decimal
  distillations   distillations @relation(fields: [distillation_id], references: [distillation_id], onDelete: NoAction, onUpdate: NoAction)
  new_drums       new_drums     @relation(fields: [drum_id], references: [drum_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([drum_id, distillation_id])
  @@schema("production")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model labs {
  lab_id              Int                   @id @default(autoincrement())
  lab_name            String                @db.VarChar(100)
  lab_site            String                @db.Char(3)
  description         String?
  operators_work_labs operators_work_labs[]
  stills              stills[]

  @@schema("production")
}

model operators {
  operator_id         Int                   @id @default(autoincrement())
  first_name          String                @db.VarChar(30)
  last_name           String                @db.VarChar(30)
  initials            String                @unique @db.VarChar(3)
  middle_names        String?               @db.VarChar(100)
  operators_work_labs operators_work_labs[]

  @@schema("production")
}

model operators_work_labs {
  operator_id Int
  lab_id      Int
  labs        labs      @relation(fields: [lab_id], references: [lab_id], onDelete: NoAction, onUpdate: NoAction)
  operators   operators @relation(fields: [operator_id], references: [operator_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([operator_id, lab_id])
  @@schema("production")
}

model output_records {
  output_id        Int       @id @default(autoincrement())
  production_id    Int?
  container_size   Int
  no_containers    Int
  grade            String?   @db.VarChar(10)
  batch_number     String?   @db.VarChar(10)
  destination      String?   @db.VarChar(100)
  labels_required  Int?
  labels_destroyed Int?
  start_time       DateTime? @db.Timestamp(6)
  end_time         DateTime? @db.Timestamp(6)
  start_temp       Decimal?  @db.Decimal(4, 1)
  completion_date  DateTime? @default(dbgenerated("CURRENT_DATE")) @db.Date

  @@schema("production")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model pr_schedule {
  schedule_id     Int      @id @default(autoincrement())
  production_date DateTime @db.Date
  lab_site        String   @db.Char(3)
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)

  @@unique([production_date, lab_site])
  @@schema("production")
}

model stills {
  still_id        Int     @id @default(autoincrement())
  still_code      String  @unique @db.Char(1)
  max_capacity    Decimal @db.Decimal(2, 1)
  power_rating_kw Int
  lab_id          Int
  is_vacuum       Boolean
  is_operational  Boolean
  description     String?
  labs            labs    @relation(fields: [lab_id], references: [lab_id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("production")
}
